#!/usr/bin/env python3

import os
import sys
import pytest

# Add the current directory to Python path
sys.path.insert(0, os.path.dirname(os.path.abspath(__file__)))

from glping.config import Config
from glping.gitlab_api import GitLabAPI
from glping.notifier import Notifier
from glping.watcher import GitLabWatcher


@pytest.mark.skipif(
    not os.getenv("GITLAB_TOKEN") or os.getenv("CI"),
    reason="–¢—Ä–µ–±—É–µ—Ç—Å—è GITLAB_TOKEN –¥–ª—è —Ä–µ–∞–ª—å–Ω—ã—Ö —Ç–µ—Å—Ç–æ–≤, –ø—Ä–æ–ø—É—Å–∫–∞–µ—Ç—Å—è –≤ CI"
)
def test_url_comparison():
    """–°—Ä–∞–≤–Ω–µ–Ω–∏–µ —Å—Ç–∞—Ä—ã—Ö –∏ –Ω–æ–≤—ã—Ö URL"""

    config = Config()
    api = GitLabAPI(config.gitlab_url, config.gitlab_token)
    watcher = GitLabWatcher(config)
    notifier = Notifier()

    print("üîç –°—Ä–∞–≤–Ω–µ–Ω–∏–µ —Å—Ç–∞—Ä—ã—Ö –∏ –Ω–æ–≤—ã—Ö URL GitLab")
    print("=" * 60)

    # –ü–æ–ª—É—á–∞–µ–º –ø—Ä–æ–µ–∫—Ç—ã
    projects = api.get_projects()

    # –ë–µ—Ä–µ–º –ø–µ—Ä–≤—ã–µ 3 –ø—Ä–æ–µ–∫—Ç–∞ –¥–ª—è —Ç–µ—Å—Ç–∞
    test_projects = projects[:3]

    for project in test_projects:
        project_id = project["id"]
        project_name = project.get(
            "name_with_namespace", project.get("name", "Unknown")
        )
        path_with_namespace = project.get("path_with_namespace", "")

        print(f"\nüìÇ –ü—Ä–æ–µ–∫—Ç: {project_name}")
        print(f"ID: {project_id}")
        print(f"Path: {path_with_namespace}")

        # –ü–æ–ª—É—á–∞–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–µ —Å–æ–±—ã—Ç–∏—è
        events = api.get_recent_events(project_id, limit=2)

        for i, event in enumerate(events, 1):
            print(f"\n--- –°–æ–±—ã—Ç–∏–µ {i} ---")

            # –ü–æ–ª—É—á–∞–µ–º –æ–ø–∏—Å–∞–Ω–∏–µ —Å–æ–±—ã—Ç–∏—è
            description = api.get_event_description(event)
            print(f"–û–ø–∏—Å–∞–Ω–∏–µ: {description}")

            # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –Ω–æ–≤—ã–π URL
            new_url = watcher._get_event_url(event, project_id)

            # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º —Å—Ç–∞—Ä—ã–π URL (—Å ID)
            target_type = event.get("target_type")
            target_id = event.get("target_id")
            target_iid = event.get("target_iid")

            old_url = f"{config.gitlab_url}/{project_id}"
            if target_type == "MergeRequest" and target_iid:
                old_url = (
                    f"{config.gitlab_url}/{project_id}/-/merge_requests/{target_iid}"
                )
            elif target_type == "Issue" and target_iid:
                old_url = f"{config.gitlab_url}/{project_id}/-/issues/{target_iid}"
            elif target_type == "Commit" and target_id:
                old_url = f"{config.gitlab_url}/{project_id}/-/commit/{target_id}"

            print(f"–°—Ç–∞—Ä—ã–π URL (–Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π): {old_url}")
            print(f"–ù–æ–≤—ã–π URL (–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π):   {new_url}")

            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ —Å –Ω–æ–≤—ã–º URL
            notifier.send_notification(
                title=f"‚úÖ –ü—Ä–∞–≤–∏–ª—å–Ω—ã–π URL - {project_name}",
                message=description,
                url=new_url,
            )

            # –ù–µ–±–æ–ª—å—à–∞—è –∑–∞–¥–µ—Ä–∂–∫–∞
            import time

            time.sleep(1)

        print("-" * 50)

    print("\n" + "=" * 60)
    print("‚úÖ –°—Ä–∞–≤–Ω–µ–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!")
    print("üì± –í—Å–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –∏—Å–ø–æ–ª—å–∑—É—é—Ç –ø—Ä–∞–≤–∏–ª—å–Ω—ã–µ URL")
    print("üîó –§–æ—Ä–º–∞—Ç: {domain}/{group_name}/{project_name}/-/{type}/{id}")


if __name__ == "__main__":
    test_url_comparison()
