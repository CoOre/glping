#!/usr/bin/env python3

import os
import sys
from datetime import datetime, timezone

# Add the parent directory to Python path
sys.path.insert(0, os.path.dirname(os.path.dirname(os.path.abspath(__file__))))

from glping.notifier import Notifier


def simulate_gitlab_events():
    """–°–∏–º—É–ª—è—Ü–∏—è —Ä–µ–∞–ª—å–Ω—ã—Ö —Å–æ–±—ã—Ç–∏–π GitLab –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π"""

    notifier = Notifier()

    print("üîÑ –°–∏–º—É–ª—è—Ü–∏—è —Å–æ–±—ã—Ç–∏–π GitLab")
    print("=" * 50)

    # –°–∏–º—É–ª–∏—Ä—É–µ–º —Ä–∞–∑–ª–∏—á–Ω—ã–µ —Å–æ–±—ã—Ç–∏—è GitLab
    events = [
        {
            "type": "MergeRequest",
            "action": "opened",
            "author": "–ò–≤–∞–Ω –ò–≤–∞–Ω–æ–≤",
            "project": "frontend/my-awesome-app",
            "url": "https://msk-git-dev01.ntcees.ru/123/-/merge_requests/456",
            "created_at": "2025-09-30T13:15:20Z",
        },
        {
            "type": "MergeRequest",
            "action": "reopened",
            "author": "–ê–Ω–Ω–∞ –°–º–∏—Ä–Ω–æ–≤–∞",
            "project": "frontend/my-awesome-app",
            "url": "https://msk-git-dev01.ntcees.ru/123/-/merge_requests/457",
            "created_at": "2025-09-30T13:20:00Z",
        },
        {
            "type": "MergeRequest",
            "action": "approved",
            "author": "–ú–∏—Ö–∞–∏–ª –ö–æ–∑–ª–æ–≤",
            "project": "frontend/my-awesome-app",
            "url": "https://msk-git-dev01.ntcees.ru/123/-/merge_requests/458",
            "created_at": "2025-09-30T13:25:00Z",
        },
        {
            "type": "Issue",
            "action": "opened",
            "author": "–ü–µ—Ç—Ä –ü–µ—Ç—Ä–æ–≤",
            "project": "backend/api-service",
            "url": "https://msk-git-dev01.ntcees.ru/456/-/issues/789",
            "created_at": "2025-09-30T13:45:10Z",
        },
        {
            "type": "Issue",
            "action": "updated",
            "author": "–û–ª—å–≥–∞ –ù–æ–≤–∏–∫–æ–≤–∞",
            "project": "backend/api-service",
            "url": "https://msk-git-dev01.ntcees.ru/456/-/issues/790",
            "created_at": "2025-09-30T13:50:00Z",
        },
        {
            "type": "Pipeline",
            "action": "success",
            "author": "–°–∏—Å—Ç–µ–º–∞ CI/CD",
            "project": "devops/deployment",
            "url": "https://msk-git-dev01.ntcees.ru/789/-/pipelines/1234",
            "created_at": "2025-09-30T14:00:00Z",
        },
        {
            "type": "Pipeline",
            "action": "failed",
            "author": "–°–∏—Å—Ç–µ–º–∞ CI/CD",
            "project": "devops/deployment",
            "url": "https://msk-git-dev01.ntcees.ru/789/-/pipelines/1235",
            "created_at": "2025-09-30T14:30:45Z",
        },
        {
            "type": "Issue",
            "action": "opened",
            "author": "–ü–µ—Ç—Ä –ü–µ—Ç—Ä–æ–≤",
            "project": "backend/api-service",
            "url": "https://msk-git-dev01.ntcees.ru/456/-/issues/789",
        },
        {
            "type": "Pipeline",
            "action": "success",
            "author": "–°–∏—Å—Ç–µ–º–∞ CI/CD",
            "project": "devops/deployment",
            "url": "https://msk-git-dev01.ntcees.ru/789/-/pipelines/1234",
        },
        {
            "type": "Pipeline",
            "action": "failed",
            "author": "–°–∏—Å—Ç–µ–º–∞ CI/CD",
            "project": "devops/deployment",
            "url": "https://msk-git-dev01.ntcees.ru/789/-/pipelines/1235",
        },
        {
            "type": "Note",
            "action": "commented",
            "author": "–ú–∞—Ä–∏—è –°–∏–¥–æ—Ä–æ–≤–∞",
            "project": "frontend/my-awesome-app",
            "url": "https://msk-git-dev01.ntcees.ru/123/-/merge_requests/456#note_1001",
            "comment": "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø—Ä–æ–≤–µ—Ä—å—Ç–µ —ç—Ç–∏ –∏–∑–º–µ–Ω–µ–Ω–∏—è",
            "created_at": "2025-09-30T14:20:30Z",
        },
        {
            "type": "Commit",
            "action": "pushed",
            "author": "–î–º–∏—Ç—Ä–∏–π –í–æ–ª–∫–æ–≤",
            "project": "backend/api-service",
            "url": "https://msk-git-dev01.ntcees.ru/456/-/commit/abc123def456",
            "created_at": "2025-09-30T15:10:15Z",
        },
        {
            "type": "Push",
            "action": "pushed new",
            "author": "–ê–ª–µ–∫—Å–∞–Ω–¥—Ä –ò–≤–∞–Ω–æ–≤",
            "project": "devops/infrastructure",
            "url": "https://msk-git-dev01.ntcees.ru/789/-/tree/feature/new-branch",
            "created_at": "2025-09-30T15:15:00Z",
        },
        {
            "type": "Push",
            "action": "pushed",
            "author": "–ï–ª–µ–Ω–∞ –ü–µ—Ç—Ä–æ–≤–∞",
            "project": "devops/infrastructure",
            "url": "https://msk-git-dev01.ntcees.ru/789/-/tags/v1.0.0",
            "created_at": "2025-09-30T15:20:00Z",
        },
        {
            "type": "Pipeline",
            "action": "running",
            "author": "–°–∏—Å—Ç–µ–º–∞ CI/CD",
            "project": "frontend/react-app",
            "url": "https://msk-git-dev01.ntcees.ru/321/-/pipelines/888",
            "created_at": "2025-09-30T15:20:00Z",
        },
        {
            "type": "Pipeline",
            "action": "pending",
            "author": "–°–∏—Å—Ç–µ–º–∞ CI/CD",
            "project": "backend/node-service",
            "url": "https://msk-git-dev01.ntcees.ru/654/-/pipelines/999",
            "created_at": "2025-09-30T15:25:00Z",
        },
        {
            "type": "Pipeline",
            "action": "canceled",
            "author": "–°–∏—Å—Ç–µ–º–∞ CI/CD",
            "project": "devops/infrastructure",
            "url": "https://msk-git-dev01.ntcees.ru/987/-/pipelines/1111",
            "created_at": "2025-09-30T15:30:00Z",
        },
    ]

    def format_test_date(created_at):
        """–§–æ—Ä–º–∞—Ç–∏—Ä—É–µ—Ç –¥–∞—Ç—É –¥–ª—è —Ç–µ—Å—Ç–∞"""
        from datetime import datetime
        if created_at:
            try:
                if created_at.endswith('Z'):
                    event_dt = datetime.fromisoformat(created_at[:-1] + '+00:00')
                else:
                    event_dt = datetime.fromisoformat(created_at)
                return event_dt.strftime("%d.%m.%H:%M")
            except:
                pass
        return ""

    for i, event in enumerate(events, 1):
        print(f"\n{i}. –°–∏–º—É–ª—è—Ü–∏—è: {event['type']} - {event['action']}")
        
        # –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º –¥–∞—Ç—É
        event_date = format_test_date(event.get("created_at", ""))

        # –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ç–∏–ø–∞ —Å–æ–±—ã—Ç–∏—è
        if event["type"] == "MergeRequest":
            if event["action"] == "opened":
                message = f"–ù–æ–≤—ã–π Merge Request –æ—Ç {event['author']}"
            elif event["action"] == "merged":
                message = f"Merge Request —Å–º–µ—Ä–∂–µ–Ω {event['author']}"
            elif event["action"] == "reopened":
                message = f"Merge Request –ø–µ—Ä–µ–æ—Ç–∫—Ä—ã—Ç {event['author']}"
            elif event["action"] == "approved":
                message = f"Merge Request –æ–¥–æ–±—Ä–µ–Ω {event['author']}"
            elif event["action"] == "unapproved":
                message = f"–û–¥–æ–±—Ä–µ–Ω–∏–µ Merge Request –æ—Ç–æ–∑–≤–∞–Ω–æ {event['author']}"
            elif event["action"] == "review_requested":
                message = f"–ó–∞–ø—Ä–æ—à–µ–Ω–æ —Ä–µ–≤—å—é Merge Request {event['author']}"
            elif event["action"] == "ready":
                message = f"Merge Request –ø–µ—Ä–µ–≤–µ–¥–µ–Ω –≤ —Å—Ç–∞—Ç—É—Å Ready {event['author']}"
            elif event["action"] == "draft":
                message = f"Merge Request –ø–µ—Ä–µ–≤–µ–¥–µ–Ω –≤ —Å—Ç–∞—Ç—É—Å Draft {event['author']}"
            else:
                message = f"Merge Request {event['action']} {event['author']}"

        elif event["type"] == "Issue":
            if event["action"] == "opened":
                message = f"–ù–æ–≤–∞—è –∑–∞–¥–∞—á–∞ –æ—Ç {event['author']}"
            elif event["action"] == "closed":
                message = f"–ó–∞–¥–∞—á–∞ –∑–∞–∫—Ä—ã—Ç–∞ {event['author']}"
            elif event["action"] == "reopened":
                message = f"–ó–∞–¥–∞—á–∞ –ø–µ—Ä–µ–æ—Ç–∫—Ä—ã—Ç–∞ {event['author']}"
            elif event["action"] == "updated":
                message = f"–ó–∞–¥–∞—á–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∞ {event['author']}"
            elif event["action"] == "moved":
                message = f"–ó–∞–¥–∞—á–∞ –ø–µ—Ä–µ–º–µ—â–µ–Ω–∞ {event['author']}"
            else:
                message = f"–ó–∞–¥–∞—á–∞ {event['action']} {event['author']}"

        elif event["type"] == "Pipeline":
            if event["action"] == "success":
                message = f"Pipeline —É—Å–ø–µ—à–Ω–æ –æ—Ç {event['author']}"
            elif event["action"] == "failed":
                message = f"Pipeline —Å –æ—à–∏–±–∫–æ–π –æ—Ç {event['author']}"
            elif event["action"] == "running":
                message = f"Pipeline –≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è –æ—Ç {event['author']}"
            elif event["action"] == "pending":
                message = f"Pipeline –æ–∂–∏–¥–∞–µ—Ç –æ—Ç {event['author']}"
            elif event["action"] == "canceled":
                message = f"Pipeline –æ—Ç–º–µ–Ω–µ–Ω –æ—Ç {event['author']}"
            else:
                message = f"Pipeline {event['action']} –æ—Ç {event['author']}"

        elif event["type"] == "Note":
            comment_text = event.get("comment", "–¢–µ–∫—Å—Ç –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è")
            message = f"–ù–æ–≤—ã–π –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –æ—Ç {event['author']}:\n\"{comment_text}\""

        elif event["type"] == "Commit":
            message = f"–ù–æ–≤—ã–π –∫–æ–º–º–∏—Ç –æ—Ç {event['author']}"
        
        elif event["type"] == "Push":
            if event["action"] == "pushed new":
                message = f"–°–æ–∑–¥–∞–Ω–∞ –Ω–æ–≤–∞—è –≤–µ—Ç–∫–∞ –æ—Ç {event['author']}"
            elif event["action"] == "pushed":
                message = f"Push –æ—Ç {event['author']}"
            else:
                message = f"Push {event['action']} –æ—Ç {event['author']}"
        
        else:
            message = f"{event['type']} {event['action']} –æ—Ç {event['author']}"
        
        # –î–æ–±–∞–≤–ª—è–µ–º –¥–∞—Ç—É –∫–æ –≤—Å–µ–º —Å–æ–æ–±—â–µ–Ω–∏—è–º
        if event_date:
            message = f"{message} {event_date}"

        else:
            message = f"{event['type']} {event['action']} –æ—Ç {event['author']}"

        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
        notifier.send_notification(
            title=event['project'],
            message=message,
            url=event["url"],
        )

        # –ù–µ–±–æ–ª—å—à–∞—è –∑–∞–¥–µ—Ä–∂–∫–∞ –º–µ–∂–¥—É —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è–º–∏
        import time

        time.sleep(2)

    print("\n" + "=" * 50)
    print("‚úÖ –°–∏–º—É–ª—è—Ü–∏—è —Å–æ–±—ã—Ç–∏–π GitLab –∑–∞–≤–µ—Ä—à–µ–Ω–∞!")
    print("üì± –í—ã –¥–æ–ª–∂–Ω—ã –±—ã–ª–∏ —É–≤–∏–¥–µ—Ç—å 6 –≤—Å–ø–ª—ã–≤–∞—é—â–∏—Ö —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π")
    print("üîó –ü—Ä–æ–≤–µ—Ä—å—Ç–µ, —á—Ç–æ –ø—Ä–∏ –∫–ª–∏–∫–µ –Ω–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ—Ç–∫—Ä—ã–≤–∞—é—Ç—Å—è –ø—Ä–∞–≤–∏–ª—å–Ω—ã–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã")


if __name__ == "__main__":
    simulate_gitlab_events()
