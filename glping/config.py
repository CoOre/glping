import os
from typing import Optional

from dotenv import load_dotenv


class Config:
    """–ö–ª–∞—Å—Å –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–µ–π GitLab Ping"""

    def __init__(self):
        """–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è"""
        # –û–ø—Ä–µ–¥–µ–ª—è–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –Ω–∞—Å—Ç—Ä–æ–µ–∫ –∏ –∫–µ—à–∞ –≤ –¥–æ–º–∞—à–Ω–µ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        self.glping_dir = os.path.expanduser("~/glping")
        
        # –°–æ–∑–¥–∞–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é, –µ—Å–ª–∏ –æ–Ω–∞ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
        os.makedirs(self.glping_dir, exist_ok=True)
        
        # –û–ø—Ä–µ–¥–µ–ª—è–µ–º –ø—É—Ç–∏ –∫ —Ñ–∞–π–ª–∞–º
        default_cache_file = os.path.join(self.glping_dir, "cache.json")
        env_file = os.path.join(self.glping_dir, ".env")
        
        # –ó–∞–≥—Ä—É–∂–∞–µ–º .env —Ñ–∞–π–ª –∏–∑ –¥–æ–º–∞—à–Ω–µ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏, –µ—Å–ª–∏ –æ–Ω —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
        if os.path.exists(env_file):
            load_dotenv(env_file)
        else:
            # –ï—Å–ª–∏ –Ω–µ—Ç –≤ –¥–æ–º–∞—à–Ω–µ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏, –ø—Ä–æ–±—É–µ–º –∑–∞–≥—Ä—É–∑–∏—Ç—å –∏–∑ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ —É—Å—Ç–∞–Ω–æ–≤–∫–∏
            try:
                import glping
                install_dir = os.path.dirname(os.path.abspath(glping.__file__))
                install_env_path = os.path.join(install_dir, '..', '.env')
                if os.path.exists(install_env_path):
                    load_dotenv(install_env_path)
                    # –ö–æ–ø–∏—Ä—É–µ–º .env –≤ –¥–æ–º–∞—à–Ω—é—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –¥–ª—è –±—É–¥—É—â–µ–≥–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è
                    import shutil
                    shutil.copy2(install_env_path, env_file)
                    print(f"–ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∞ –≤ {env_file}")
                else:
                    # –ï—Å–ª–∏ –Ω–µ—Ç –Ω–∏–≥–¥–µ, –∏—â–µ–º –≤ —Ç–µ–∫—É—â–µ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
                    load_dotenv()
            except ImportError:
                # –ï—Å–ª–∏ –Ω–µ –º–æ–∂–µ–º –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å glping, –∏—â–µ–º –≤ —Ç–µ–∫—É—â–µ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
                load_dotenv()

        self.gitlab_url: str = os.getenv("GITLAB_URL", "https://gitlab.com")
        self.gitlab_token: str = os.getenv("GITLAB_TOKEN", "")
        self.check_interval: int = int(os.getenv("CHECK_INTERVAL", "60"))
        # –í—Å–µ–≥–¥–∞ –∏—Å–ø–æ–ª—å–∑—É–µ–º –ø–æ–ª–Ω—ã–π –ø—É—Ç—å –∫ —Ñ–∞–π–ª—É –∫–µ—à–∞ –≤ –¥–æ–º–∞—à–Ω–µ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
        cache_file_name = os.getenv("CACHE_FILE", "cache.json")
        self.cache_file: str = os.path.join(self.glping_dir, cache_file_name)
        self.project_id: Optional[int] = None

        if not self.gitlab_token:
            raise ValueError("GITLAB_TOKEN –æ–±—è–∑–∞—Ç–µ–ª–µ–Ω")
        
        # –í–∞–ª–∏–¥–∞—Ü–∏—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
        self._validate_config()
        
        # –í—ã–≤–æ–¥–∏–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∑–∞–≥—Ä—É–∂–µ–Ω–Ω—ã—Ö –Ω–∞—Å—Ç—Ä–æ–π–∫–∞—Ö
        print(f"üìÅ –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –∑–∞–≥—Ä—É–∂–µ–Ω–∞ –∏–∑: {env_file if os.path.exists(env_file) else '—Ç–µ–∫—É—â–µ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏'}")
        print(f"üîó GitLab URL: {self.gitlab_url}")
        print(f"‚è±Ô∏è  –ò–Ω—Ç–µ—Ä–≤–∞–ª –ø—Ä–æ–≤–µ—Ä–∫–∏: {self.check_interval} —Å–µ–∫—É–Ω–¥")
        print(f"üíæ –§–∞–π–ª –∫–µ—à–∞: {self.cache_file}")
        if self.project_id:
            print(f"üéØ –û—Ç—Å–ª–µ–∂–∏–≤–∞–µ–º—ã–π –ø—Ä–æ–µ–∫—Ç ID: {self.project_id}")

    def set_project_id(self, project_id: Optional[int]):
        """–£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å ID –ø—Ä–æ–µ–∫—Ç–∞ –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è"""
        self.project_id = project_id

    def _validate_config(self):
        """–í–∞–ª–∏–¥–∞—Ü–∏—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏"""
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ URL
        if not self.gitlab_url.startswith(('http://', 'https://')):
            raise ValueError("GITLAB_URL –¥–æ–ª–∂–µ–Ω –Ω–∞—á–∏–Ω–∞—Ç—å—Å—è —Å http:// –∏–ª–∏ https://")
        
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–æ–∫–µ–Ω–∞
        if len(self.gitlab_token) < 10:
            raise ValueError("GITLAB_TOKEN —Å–ª–∏—à–∫–æ–º –∫–æ—Ä–æ—Ç–∫–∏–π, –ø—Ä–æ–≤–µ—Ä—å—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç—å —Ç–æ–∫–µ–Ω–∞")
        
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏–Ω—Ç–µ—Ä–≤–∞–ª–∞
        if self.check_interval < 1:
            raise ValueError("CHECK_INTERVAL –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—ã–º —á–∏—Å–ª–æ–º")
        if self.check_interval > 3600:
            print(f"‚ö†Ô∏è  CHECK_INTERVAL={self.check_interval}—Å –æ—á–µ–Ω—å –±–æ–ª—å—à–æ–π, —Ä–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –Ω–µ –±–æ–ª–µ–µ 3600—Å (1 —á–∞—Å)")
    
    def get_project_filter(self) -> dict:
        """–ü–æ–ª—É—á–∏—Ç—å —Ñ–∏–ª—å—Ç—Ä –¥–ª—è –ø—Ä–æ–µ–∫—Ç–æ–≤"""
        if self.project_id:
            return {"project_id": self.project_id}
        return {"membership": True}
