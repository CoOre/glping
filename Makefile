.PHONY: install install-dev uninstall clean test lint type-check build publish build-binary help

# Default target
all: help

# Help target - show available commands
help:
	@echo "GitLab Ping - Makefile"
	@echo "=========================="
	@echo ""
	@echo "–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:"
	@echo "  install      - –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å glping –≥–ª–æ–±–∞–ª—å–Ω–æ (—Ç—Ä–µ–±—É–µ—Ç sudo)"
	@echo "  install-dev  - –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –≤ —Ä–µ–∂–∏–º–µ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏ —Å –≤–∏—Ä—Ç—É–∞–ª—å–Ω—ã–º –æ–∫—Ä—É–∂–µ–Ω–∏–µ–º"
	@echo "  uninstall    - –£–¥–∞–ª–∏—Ç—å glping –≥–ª–æ–±–∞–ª—å–Ω–æ"
	@echo "  clean        - –û—á–∏—Å—Ç–∏—Ç—å –∞—Ä—Ç–µ—Ñ–∞–∫—Ç—ã —Å–±–æ—Ä–∫–∏ –∏ –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–µ –æ–∫—Ä—É–∂–µ–Ω–∏–µ"
	@echo "  test         - –ó–∞–ø—É—Å—Ç–∏—Ç—å —Ç–µ—Å—Ç—ã"
	@echo "  test-notif   - –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Å–∏—Å—Ç–µ–º—É —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π"
	@echo "  test-stacking - –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Å—Ç–µ–∫–∏—Ä–æ–≤–∞–Ω–∏–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π"
	@echo "  lint         - –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –∫–æ–¥ —Å –ø–æ–º–æ—â—å—é flake8"
	@echo "  type-check   - –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Ç–∏–ø—ã —Å –ø–æ–º–æ—â—å—é mypy"
	@echo "  build        - –°–æ–±—Ä–∞—Ç—å –ø–∞–∫–µ—Ç"
	@echo "  build-binary - –°–æ–±—Ä–∞—Ç—å –±–∏–Ω–∞—Ä–Ω—ã–π —Ñ–∞–π–ª"
	@echo "  publish      - –û–ø—É–±–ª–∏–∫–æ–≤–∞—Ç—å –ø–∞–∫–µ—Ç –≤ PyPI"
	@echo "  help         - –ü–æ–∫–∞–∑–∞—Ç—å —ç—Ç–æ —Å–ø—Ä–∞–≤–æ—á–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ"
	@echo ""
	@echo "–ü—Ä–∏–º–µ—Ä—ã:"
	@echo "  make install"
	@echo "  make test-notif"
	@echo "  make test-stacking"
	@echo "  glping --once"

# Install globally (requires sudo for /usr/local/bin)
install:
	@echo "üöÄ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ GitLab Ping –≥–ª–æ–±–∞–ª—å–Ω–æ..."
	@echo "========================================"
	
	# Check if Python 3.11+ is available
	@python3 -c "import sys; assert sys.version_info >= (3, 11), 'Python 3.11+ required'" || (echo "‚ùå –û—à–∏–±–∫–∞: –¢—Ä–µ–±—É–µ—Ç—Å—è Python 3.11+" && exit 1)
	
	# Install dependencies
	@echo "üì¶ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π..."
	@pip3 install --user --break-system-packages -r requirements.txt
	
	# Install the package
	@echo "üì¶ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø–∞–∫–µ—Ç–∞ glping..."
	@pip3 install --user --break-system-packages -e .
	
	# Create symlink in /usr/local/bin
	@echo "üîó –°–æ–∑–¥–∞–Ω–∏–µ —Å–∏—Å—Ç–µ–º–Ω–æ–π —Å–∏–º–≤–æ–ª–∏—á–µ—Å–∫–æ–π —Å—Å—ã–ª–∫–∏..."
	@ln -sf $$(python3 -c "import site; print(site.USER_BASE)")/bin/glping /usr/local/bin/glping || \
		(echo "‚ö†Ô∏è  –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å —Å—Å—ã–ª–∫—É –≤ /usr/local/bin. –í–æ–∑–º–æ–∂–Ω–æ, –Ω—É–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å $$(python3 -c "import site; print(site.USER_BASE)")/bin –≤ –≤–∞—à PATH" && exit 1)
	
	@echo "‚úÖ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ —É—Å–ø–µ—à–Ω–æ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!"
	@echo "üéâ –¢–µ–ø–µ—Ä—å –º–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å: glping --help"
	@echo ""
	@echo "–ë—ã—Å—Ç—Ä–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞:"
	@glping --test-notification

# Install in development mode with virtual environment
install-dev:
	@echo "üîß –£—Å—Ç–∞–Ω–æ–≤–∫–∞ GitLab Ping –≤ —Ä–µ–∂–∏–º–µ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏..."
	@echo "=================================================="
	
	# Create virtual environment if it doesn't exist
	@if [ ! -d "venv" ]; then \
		echo "üì¶ –°–æ–∑–¥–∞–Ω–∏–µ –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–≥–æ –æ–∫—Ä—É–∂–µ–Ω–∏—è..."; \
		python3 -m venv venv; \
	fi
	
	# Activate virtual environment and install
	@echo "üì¶ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π..."
	@./venv/bin/pip install -r requirements.txt
	
	@echo "üì¶ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø–∞–∫–µ—Ç–∞ glping..."
	@./venv/bin/pip install -e .
	
	@echo "‚úÖ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –≤ —Ä–µ–∂–∏–º–µ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!"
	@echo "üéâ –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ: ./venv/bin/glping --help"
	@echo ""
	@echo "–ë—ã—Å—Ç—Ä–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞:"
	@./venv/bin/glping --test-notification

# Uninstall globally
uninstall:
	@echo "üóëÔ∏è  –£–¥–∞–ª–µ–Ω–∏–µ GitLab Ping..."
	@echo "================================="
	
	# Remove symlink
	@echo "üîó –£–¥–∞–ª–µ–Ω–∏–µ —Å–∏—Å—Ç–µ–º–Ω–æ–π —Å–∏–º–≤–æ–ª–∏—á–µ—Å–∫–æ–π —Å—Å—ã–ª–∫–∏..."
	@rm -f /usr/local/bin/glping
	
	# Uninstall package
	@echo "üì¶ –£–¥–∞–ª–µ–Ω–∏–µ –ø–∞–∫–µ—Ç–∞..."
	@pip3 uninstall -y --break-system-packages glping || echo "–ü–∞–∫–µ—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω –∏–ª–∏ —É–∂–µ —É–¥–∞–ª–µ–Ω"
	
	@echo "‚úÖ –£–¥–∞–ª–µ–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!"

# Clean build artifacts and virtual environment
clean:
	@echo "üßπ –û—á–∏—Å—Ç–∫–∞ –∞—Ä—Ç–µ—Ñ–∞–∫—Ç–æ–≤ —Å–±–æ—Ä–∫–∏..."
	@echo "==============================="
	
	# Remove virtual environment
	@echo "üóëÔ∏è  –£–¥–∞–ª–µ–Ω–∏–µ –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–≥–æ –æ–∫—Ä—É–∂–µ–Ω–∏—è..."
	@rm -rf venv/
	
	# Remove build artifacts
	@echo "üóëÔ∏è  –£–¥–∞–ª–µ–Ω–∏–µ –∞—Ä—Ç–µ—Ñ–∞–∫—Ç–æ–≤ —Å–±–æ—Ä–∫–∏..."
	@rm -rf build/
	@rm -rf dist/
	@rm -rf *.egg-info/
	@rm -rf __pycache__/
	@rm -rf glping/__pycache__/
	@find . -name "*.pyc" -delete
	@find . -name "*.pyo" -delete
	
	@echo "‚úÖ –û—á–∏—Å—Ç–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!"

# Run tests
test:
	@echo "üß™ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤..."
	@echo "=================="
	
	@echo "üì± –ü—Ä–æ–≤–µ—Ä–∫–∞ –º–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã—Ö —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π..."
	@python3 tests/test_multiple_notifications.py
	
	@echo "üîó –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∫–ª–∏–∫–æ–≤ –ø–æ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è–º..."
	@python3 tests/test_notification_click.py
	
	@echo "üåê –ü—Ä–æ–≤–µ—Ä–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ URL..."
	@python3 tests/test_real_urls.py
	
	@echo "‚úÖ –í—Å–µ —Ç–µ—Å—Ç—ã –∑–∞–≤–µ—Ä—à–µ–Ω—ã!"

# Run CI/CD specific tests
test-ci:
	@echo "üîÑ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ CI/CD —Å–æ–±—ã—Ç–∏–π..."
	@echo "==============================="
	
	@echo "üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ pipeline —Å–æ–±—ã—Ç–∏–π..."
	@python3 tests/test_pipeline_events.py
	
	@echo "üîó –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ CI/CD..."
	@python3 tests/test_ci_integration_simple.py
	
	@echo "‚úÖ –í—Å–µ CI/CD —Ç–µ—Å—Ç—ã –∑–∞–≤–µ—Ä—à–µ–Ω—ã!"

# Run all tests including CI/CD
test-all: test test-ci
	@echo ""
	@echo "üéâ –í—Å–µ —Ç–µ—Å—Ç—ã (–æ—Å–Ω–æ–≤–Ω—ã–µ + CI/CD) —É—Å–ø–µ—à–Ω–æ –∑–∞–≤–µ—Ä—à–µ–Ω—ã!"

# Run linting
lint:
	@echo "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–¥–∞ —Å –ø–æ–º–æ—â—å—é flake8..."
	@echo "====================================="
	@python3 -m flake8 glping/ tests/ --count --select=E9,F63,F7,F82 --show-source --statistics
	@python3 -m flake8 glping/ tests/ --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
	@echo "‚úÖ –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–¥–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!"

# Type checking
type-check:
	@echo "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–∏–ø–æ–≤ —Å –ø–æ–º–æ—â—å—é mypy..."
	@echo "====================================="
	@python3 -m mypy glping/ --ignore-missing-imports || true
	@echo "‚úÖ –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–∏–ø–æ–≤ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!"

# Build package
build:
	@echo "üì¶ –°–±–æ—Ä–∫–∞ –ø–∞–∫–µ—Ç–∞..."
	@echo "====================="
	@python -m pip install --upgrade pip build wheel twine
	@python -m build
	@twine check dist/*
	@echo "‚úÖ –°–±–æ—Ä–∫–∞ –ø–∞–∫–µ—Ç–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!"

# Publish to PyPI
publish: build
	@echo "üöÄ –ü—É–±–ª–∏–∫–∞—Ü–∏—è –ø–∞–∫–µ—Ç–∞ –≤ PyPI..."
	@echo "==============================="
	@twine upload dist/*
	@echo "‚úÖ –ü—É–±–ª–∏–∫–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞!"



# Build binary with PyInstaller
build-binary:
	@echo "üî® –°–±–æ—Ä–∫–∞ –±–∏–Ω–∞—Ä–Ω–æ–≥–æ —Ñ–∞–π–ª–∞..."
	@echo "============================"
	
	# Install PyInstaller if not installed
	@command -v pyinstaller >/dev/null 2>&1 || \
		(echo "üì¶ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ PyInstaller..." && pip3 install --break-system-packages pyinstaller)
	
	# Build binary
	@echo "üì¶ –°–±–æ—Ä–∫–∞ –±–∏–Ω–∞—Ä–Ω–∏–∫–∞..."
	@pyinstaller --onefile --name glping run_cli.py \
		--add-data "glping:glping" \
		--hidden-import=plyer \
		--hidden-import=dotenv \
		--hidden-import=click \
		--hidden-import=requests \
		--hidden-import=aiohttp \
		--hidden-import=gitlab \
		--collect-all glping
	
	@echo "‚úÖ –ë–∏–Ω–∞—Ä–Ω–∏–∫ —Å–æ–±—Ä–∞–Ω: dist/glping"
	@echo "üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –±–∏–Ω–∞—Ä–Ω–∏–∫–∞..."
	@./dist/glping --help || echo "‚ö†Ô∏è  –ë–∏–Ω–∞—Ä–Ω–∏–∫ –º–æ–∂–µ—Ç –ø–æ—Ç—Ä–µ–±–æ–≤–∞—Ç—å –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π —Å–∏—Å—Ç–µ–º—ã"
	
	@echo "‚úÖ –°–±–æ—Ä–∫–∞ –±–∏–Ω–∞—Ä–Ω–∏–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!"

# Run all CI checks
ci: lint type-check test
	@echo "‚úÖ –í—Å–µ –ø—Ä–æ–≤–µ—Ä–∫–∏ CI –ø—Ä–æ–π–¥–µ–Ω—ã!"

# Format code
format:
	@echo "‚ú® –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–æ–¥–∞..."
	@echo "========================="
	@python3 -m pip install --break-system-packages black isort
	@python3 -m black glping/ tests/
	@python3 -m isort glping/ tests/
	@echo "‚úÖ –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–æ–¥–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!"

# Test notification system
test-notif:
	@echo "üîî –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–∏—Å—Ç–µ–º—ã —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π..."
	@echo "================================="
	
	@if command -v glping >/dev/null 2>&1; then \
		glping --test-notification; \
	else \
		echo "‚ö†Ô∏è  glping –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ PATH, –ø—Ä–æ–±—É–µ–º —Å –≤–∏—Ä—Ç—É–∞–ª—å–Ω—ã–º –æ–∫—Ä—É–∂–µ–Ω–∏–µ–º..."; \
		if [ -f "venv/bin/glping" ]; then \
			./venv/bin/glping --test-notification; \
		else \
			echo "‚ùå glping –Ω–µ –Ω–∞–π–¥–µ–Ω. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–ø–æ–ª–Ω–∏—Ç–µ 'make install' –∏–ª–∏ 'make install-dev' —Å–Ω–∞—á–∞–ª–∞."; \
			exit 1; \
		fi; \
	fi

test-stacking:
	@echo "üì± –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–µ–∫–∏—Ä–æ–≤–∞–Ω–∏—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π..."
	@echo "======================================="
	@python3 tests/test_notification_stacking.py

test-all-notifications:
	@echo "üîî –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –≤—Å–µ—Ö —Ç–∏–ø–æ–≤ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π..."
	@echo "========================================"
	@python3 tests/test_all_notifications.py

test-gitlab-events:
	@echo "üîÑ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–∏–º—É–ª—è—Ü–∏–∏ —Å–æ–±—ã—Ç–∏–π GitLab..."
	@echo "=========================================="
	@python3 tests/test_gitlab_events.py

# Check system requirements
check-reqs:
	@echo "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–∏—Å—Ç–µ–º–Ω—ã—Ö —Ç—Ä–µ–±–æ–≤–∞–Ω–∏–π..."
	@echo "=================================="
	
	@echo "üêç –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤–µ—Ä—Å–∏–∏ Python..."
	@python3 --version
	
	@echo "üì¶ –ü—Ä–æ–≤–µ—Ä–∫–∞ pip..."
	@pip3 --version
	
	@echo "üîó –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ –∑–∞–ø–∏—Å–∏ –≤ /usr/local/bin..."
	@touch /usr/local/bin/.glping-test 2>/dev/null && rm -f /usr/local/bin/.glping-test && echo "‚úÖ /usr/local/bin –¥–æ—Å—Ç—É–ø–µ–Ω –¥–ª—è –∑–∞–ø–∏—Å–∏" || echo "‚ö†Ô∏è  /usr/local/bin —Ç—Ä–µ–±—É–µ—Ç –ø—Ä–∞–≤ sudo"
	
	@echo "‚úÖ –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏–π –∑–∞–≤–µ—Ä—à–µ–Ω–∞!"

# Development setup (for developers)
dev-setup: install-dev
	@echo "üõ†Ô∏è  –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Å—Ä–µ–¥—ã —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!"
	@echo "=========================================="
	@echo ""
	@echo "–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:"
	@echo "  ./venv/bin/glping --help"
	@echo "  make test"
	@echo "  make test-notif"
	@echo "  make clean"

# Production setup (for end users)
prod-setup: install
	@echo "üöÄ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Ä–∞–±–æ—á–µ–π —Å—Ä–µ–¥—ã –∑–∞–≤–µ—Ä—à–µ–Ω–∞!"
	@echo "=========================================="
	@echo ""
	@echo "–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:"
	@echo "  glping --help"
	@echo "  glping --daemon"
	@echo "  glping --once"
	@echo "  make uninstall"